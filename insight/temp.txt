>>> import numpy as mp
>>> from sklearn.naive_bayes import GaussianNB
>>> clf = GaussianNB()
>>> import numpy as np
>>> X = np.array([[-1, -1, 2], [-2, -1,2], [-3, -2,5]])
>>>  y = np.array([1, 1, 0])
  File "<stdin>", line 1
    y = np.array([1, 1, 0])
    ^
IndentationError: unexpected indent
>>> y = np.array([1, 1, 0])
>>> clf.fit(X, Y)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Y' is not defined
>>> clf.fit(X, y)
GaussianNB(priors=None)
>>> print(clf.predict([[-0.8, -1]]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\Ambareesh\Anaconda2\Lib\site-packages\sklearn\naive_bayes.py", line 65, in predict
    jll = self._joint_log_likelihood(X)
  File "C:\Users\Ambareesh\Anaconda2\Lib\site-packages\sklearn\naive_bayes.py", line 429, in _joint_log_likelihood
    n_ij -= 0.5 * np.sum(((X - self.theta_[i, :]) ** 2) /
ValueError: operands could not be broadcast together with shapes (1,2) (3,)
>>> print(clf.predict([[-0.8, -1,7]]))
[0]
>>> print(clf.predict([[-0.8, -1,2]]))
[1]
>>> print(clf.predict([[-0.8, -1,2],[1,2,4]]))
[1 1]
>>> print(clf.predict([[-0.8, -1,2]]))
[1]
>>> print(clf.predict([[-0.8, -1,2]]))
[1]
>>> print(clf.predict([[-0.8, -10,2]]))
[0]
>>> print(clf.predict([[-0.8, -10,2]]))
[0]
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> print(clf.predict_log_proba([[-0.8, -10,2]]))
[[  0.00000000e+00  -7.90000010e+08]]
>>> y = np.array([1, 2, 0])
>>> clf.fit(X, y)
GaussianNB(priors=None)
>>> print(clf.predict_log_proba([[-0.8, -10,2]]))
[[  0.00000000e+00  -8.00000000e+08  -1.15000000e+09]]
>>> clf.predict_log_proba([[-0.8, -10,2]])[0]
array([  0.00000000e+00,  -8.00000000e+08,  -1.15000000e+09])
>>> clf.predict_log_proba([[-0.8, -10,2]])[0][0]
0.0
>>> clf.predict_log_proba([[-0.8, -10,2]])[0][1]
-800000000.0
>>> clf.predict_log_proba([[-0.8, -10,2]])[0][2]
-1150000000.0
>>> clf.predict_log_proba([[-0.8, -10,2]])[0][1]/(clf.predict_log_proba([[-0.8, -10,2]])[0][1]+clf.predict_log_proba([[-0.8, -10,2]])[0][2])
0.41025641025641024
>>>
